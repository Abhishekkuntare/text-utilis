{"version":3,"sources":["componets/Alert.js","componets/Navbar.js","componets/TextFrom.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","src","alt","id","onClick","toggleMode","htmlFor","TextFrom","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","showAlert","newText1","newtext3","document","getElementById","select","navigator","clipboard","writeText","newtext4","split","join","length","defaultProps","title","aboutText","App","setMode","setAlert","message","setTimeout","about","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4f19f54d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Alert\r\n","import React from 'react'\r\n// import { Link } from 'react-router-dom';\r\nimport \"./Favicon.css\"\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <a className=\"navbar-brand\" href=\"#\"><img className=\"favicon\" src=\"favicon.png\" alt=\"\" /></a>\r\n            {/* <link className=\"navbar-brand\" to=\"#\"><img className=\"favicon\" src=\"favicon.png\" alt=\"\" /></link> */}\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item \">\r\n                        {/* <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link> */}\r\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                    </li> */}\r\n                </ul>\r\n\r\n                <div className={`form-check form-switch text-${props.mode === 'light' ? '#042743' : 'light'}`}>\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n// Navbar.propTypes = {\r\n//     title: PropTypes.string.isRequied,\r\n//     aboutText: PropTypes.string.isRequied\r\n// }\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'this is a about title'\r\n};","import React, { useState } from 'react';\r\n\r\nexport default function TextFrom(props) {\r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to upper case !\", \"success\")\r\n\r\n\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText1 = text.toLowerCase();\r\n        setText(newText1);\r\n        props.showAlert(\"Converted to lower case !\", \"success\")\r\n\r\n    }\r\n    const handleDeClick = () => {\r\n        let newText2 = \"\";\r\n        setText(newText2);\r\n        props.showAlert(\"Text Cleared !\", \"success\")\r\n\r\n    }\r\n\r\n    const handleCoClick = () => {\r\n        var newtext3 = document.getElementById(\"my-box\")\r\n        newtext3.select();\r\n        navigator.clipboard.writeText(newtext3.value);\r\n        props.showAlert(\"Copied to Clipboard !\", \"success\")\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newtext4 = text.split(/[ ]+/);\r\n        setText(newtext4.join(\" \"))\r\n        props.showAlert(\"Removed extra spaces !\", \"success\")\r\n\r\n    }\r\n\r\n\r\n    const handleOnChange = (event) => {\r\n        console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }} >\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control \" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#042743' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }} id=\"my-box\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary  mx-1\" onClick={handleUpClick}>Convert To Uppercase</button>\r\n                <button className=\"btn btn-success mx-1\" onClick={handleLoClick}>Convert To Lowercase</button>\r\n                <button className=\"btn btn-danger mx-1\" onClick={handleDeClick}>Clear Text</button>\r\n                <button className=\"btn btn-light mx-1\" onClick={handleCoClick}>Copy Text</button>\r\n                <button className=\"btn btn-dark mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-2\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }} >\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(\" \").length} words and charachers {text.length}</p>\r\n                <p>{0.008 * text.split(\" \").length} minutes to read </p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter something in the text box above to preview it here \"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\nimport Alert from './componets/Alert';\nimport Navbar from './componets/Navbar';\nimport TextFrom from './componets/TextFrom';\n// import About from './componets/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtilis-Dark Mode'\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtilis-Light Mode'\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Text-Utils\" about=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n\n        {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n        <TextFrom showAlert={showAlert} heading=\"Enter the text to analyze below \" mode={mode} />\n        {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* // </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}